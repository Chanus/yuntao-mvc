package ${package}.controller;

import java.util.Arrays;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import pers.chanus.yuntao.commons.constant.LogTypeEnum;
import pers.chanus.yuntao.commons.pojo.Message;
import pers.chanus.yuntao.commons.pojo.PageBean;
import pers.chanus.yuntao.manager.common.ModulePowerUtils;
import ${package}.model.${className};
import ${package}.service.${className}Service;
import pers.chanus.yuntao.server.annotation.SystemLog;
import pers.chanus.yuntao.springmvc.controller.BaseController;

/**
 * ${tableComment}管理
 * 
 * @author ${author}
 * @date ${dateTime}
 * @since ${since}
 */
@Controller
@RequestMapping("${pathName}")
public class ${className}Controller extends BaseController {
	@Autowired
	private ${className}Service ${classname}Service;
#if("$!moduleId" != "")

	private final int currentModuleId = ${moduleId};
#end

	/**
	 * 首页
	 * @param model
	 * @return
	 */
	@GetMapping(value = "main.do")
	public String main(Model model) {
		model.addAttribute("powers", ModulePowerUtils.getPowers(getSession(), currentModuleId));
		return "${pathName}/list";
	}
	
	/**
	 * 分页查询
	 * @return
	 */
	@ResponseBody
	@PostMapping(value = "list.do", produces = "application/json; charset=utf-8")
	public PageBean list() {
		return ${classname}Service.listPagination(getParams());
	}
	
	/**
	 * 跳转到添加页面
	 * @param model
	 * @return
	 */
	@GetMapping(value = "add.do")
	public String add(Model model) {
		model.addAttribute("${classname}", new ${className}());
		model.addAttribute("cmd", "add");
		return "${pathName}/add-update";
	}
	
	/**
	 * 添加
	 * @param ${classname}
	 * @return
	 */
	@ResponseBody
	@SystemLog(module = currentModuleId, logType = LogTypeEnum.INSERT)
	@PostMapping(value = "add.do", produces = "application/json; charset=utf-8")
	public Message add(${className} ${classname}) {
		return ${classname}Service.insert(${classname});
	}
	
	/**
	 * 跳转到修改页面
	 * @param ${pk.attributename}	主键
	 * @param model
	 * @return
	 */
	@GetMapping(value = "update.do")
	public String update(${pk.attributeType} ${pk.attributename}, Model model) {
		model.addAttribute("${classname}", ${classname}Service.get(${pk.attributename}));
		model.addAttribute("cmd", "update");
		return "${pathName}/add-update";
	}
	
	/**
	 * 修改
	 * @param ${classname}
	 * @return
	 */
	@ResponseBody
	@SystemLog(module = currentModuleId, logType = LogTypeEnum.UPDATE)
	@PostMapping(value = "update.do", produces = "application/json; charset=utf-8")
	public Message update(${className} ${classname}) {
		return ${classname}Service.update(${classname});
	}
	
	/**
	 * 删除/批量删除
	 * @param ids	被删除记录主键数组
	 * @return
	 */
	@ResponseBody
	@SystemLog(module = currentModuleId, logType = LogTypeEnum.DELETE)
	@PostMapping(value = "delete.do", produces = "application/json; charset=utf-8")
	public Message delete(${pk.attributeType}[] ids) {
		return ${classname}Service.delete(Arrays.asList(ids));
	}

}
