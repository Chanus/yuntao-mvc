<?xml version="1.0" encoding="UTF-8"?>
<web-app id="AppServer" version="3.0"
  xmlns="http://java.sun.com/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
  http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">

  <!-- Spring配置文件，启动数据库连接 -->
  <context-param>
    <description>Spring配置文件，启动数据库连接</description>
    <param-name>contextConfigLocation</param-name>
    <!-- 单数据源 -->
    <param-value>classpath*:spring-database.xml</param-value>
    <!-- 双数据源，实现读写分离 -->
    <!-- <param-value>classpath*:spring-database-rw.xml</param-value> -->
    <!-- 多数据源动态切换 -->
    <!-- <param-value>classpath*:spring-database-dynamic.xml</param-value> -->
    <!-- 单数据源，支持Redis -->
    <!-- <param-value>classpath*:spring-database-redis.xml</param-value> -->
    <!-- 单数据源，实现读写分离，支持Redis -->
    <!-- <param-value>classpath*:spring-database-rw-redis.xml</param-value> -->
    <!-- 多数据源动态切换，支持Redis -->
    <!-- <param-value>classpath*:spring-database-dynamic-redis.xml</param-value> -->
  </context-param>
  
  <!-- Spring核心 -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <!-- Session统一存储在Redis中，实现Session共享。一般情况下Spring Session的过滤器要放在第一位 -->
  <!-- <filter>
    <filter-name>springSessionRepositoryFilter</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>springSessionRepositoryFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping> -->
  
  <!-- 可以使用RequestContextHolder.currentRequestAttributes() 获取到请求的attr -->
  <listener>
    <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
  </listener>
  <servlet>
    <servlet-name>springMVC</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath*:spring-mvc*.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>springMVC</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>

  <!-- 应用初始化参数 -->
  <servlet>
    <servlet-name>configServlet</servlet-name>
    <servlet-class>com.chanus.yuntao.mvc.framework.ConfigServlet</servlet-class>
    <load-on-startup>2</load-on-startup>
    <async-supported>true</async-supported>
  </servlet>
  
  <!-- 设置servlet编码 -->
  <filter>
    <filter-name>Set Character Encoding</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>Set Character Encoding</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <!-- Druid,监控数据库,以及WEB访问连接信息 -->
  <filter>
    <filter-name>DruidWebStatFilter</filter-name>
    <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
    <init-param>
      <param-name>exclusions</param-name>
      <param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,*.jsp,/druid/*,/download/*</param-value>
    </init-param>
    <!-- 缺省sessionStatMaxCount是1000个 -->
    <init-param>
      <param-name>sessionStatMaxCount</param-name>
      <param-value>2000</param-value>
    </init-param>
    <!-- 启动或关闭session统计功能 -->
    <init-param>
      <param-name>sessionStatEnable</param-name>
      <param-value>true</param-value>
    </init-param>
    <!-- 使得druid能够知道当前的session的用户是谁，用户信息保存在session中的sessionName。
      如果你session中保存的是非string类型的对象，需要重载toString方法 -->
    <init-param>
      <param-name>principalSessionName</param-name>
      <param-value>loginname</param-value>
    </init-param>
    <!-- 如果你的用户信息保存在cookie中，配置principalCookieName使得druid知道当前的用户是谁。
      配置为user信息保存在cookie中的cookieName -->
    <!-- <init-param>
      <param-name>principalCookieName</param-name>
      <param-value>loginname</param-value>
    </init-param> -->
    <!-- 配置profileEnable能够监控单个url调用的sql列表 -->
    <init-param>
      <param-name>profileEnable</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>DruidWebStatFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <!-- 配置Druid监控信息显示页面，内置监控页面的首页是/druid/index.html -->
  <servlet>
    <servlet-name>DruidStatView</servlet-name>
    <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
    <init-param>
      <!-- 允许清空统计数据 -->
      <param-name>resetEnable</param-name>
      <param-value>true</param-value>
    </init-param>
    <!-- 用户名 -->
    <init-param>
      <param-name>loginUsername</param-name>
      <param-value>druid</param-value>
    </init-param>
    <!-- 密码 -->
    <init-param>
      <param-name>loginPassword</param-name>
      <param-value>druid</param-value>
    </init-param>
  </servlet>
  <servlet-mapping>
    <servlet-name>DruidStatView</servlet-name>
    <url-pattern>/druid/*</url-pattern>
  </servlet-mapping>
  
  <!-- 欢迎页面 -->
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
  
  <!-- 错误页面 -->
  <error-page>
    <error-code>404</error-code>
    <location>/404.jsp</location>
  </error-page>
  
  <!-- session超时时间 -->
  <session-config>
    <session-timeout>60</session-timeout>
  </session-config>

</web-app>
