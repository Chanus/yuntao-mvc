<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:mvc="http://www.springframework.org/schema/mvc"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

  <!-- 国际化资源文件 -->
  <!-- messageSource: 配置的是国际化资源文件的路径 -->
  <!-- org.springframework.context.support.ResourceBundleMessageSource 只能读取 classpath 中的文件 -->
  <!-- org.springframework.context.support.ReloadableResourceBundleMessageSource 可以读取外部文件 -->
  <!-- classpath:messages 指的是 classpath 路径下的 message_zh_CN.properties 文件和 message_en_US.properties 文件 -->
  <!-- useCodeAsDefaultMessage: 默认为 false，当 Spring 在 ResourceBundle 中找不到 messageKey 的话，就抛出 NoSuchMessageException，
       设置为 true，则找不到不会抛出异常，而是使用 messageKey 作为返回值 -->
  <beans:bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
    <beans:property name="defaultEncoding" value="UTF-8"/>
    <beans:property name="useCodeAsDefaultMessage" value="true"/>
    <beans:property name="basename" value="messages/message"/>
  </beans:bean>


  <!-- <beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
    <beans:property name="defaultEncoding" value="UTF-8"/>
    <beans:property name="basenames">
      <list>
        <value>classpath:messages/message</value>
        <value>file:C:/messages/message</value>
      </list>
    </beans:property>
  </beans:bean> -->

  <!-- 存储区域设置信息，SessionLocaleResolver 类通过一个预定义会话名将区域化信息存储在会话中，从 session 判断用户语言 -->
  <!--<beans:bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
    <beans:property name="defaultLocale" value="zh_CN"/>
  </beans:bean>-->

  <!-- 存储区域设置信息，CookieLocaleResolver 类通过一个预定义 Cookie 名将区域化信息存储在 Cookie 中，从 cookie 判断用户语言 -->
  <beans:bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
    <!-- 设置默认语言 -->
    <beans:property name="defaultLocale" value="zh_CN"/>
    <!-- 设置 Cookie 名称，默认名称为 org.springframework.web.servlet.i18n.CookieLocaleResolver.LOCALE -->
    <beans:property name="cookieName" value="lang"/>
    <!-- 设置最大有效时间，如果是-1，则不存储，浏览器关闭后即失效，默认为 Integer.MAX_INT -->
    <!-- <beans:property name="cookieMaxAge" value="604800"/> -->
    <!-- 设置 cookie 可见的地址，默认是 “/”，即对网站所有地址都是可见的，如果设为其它地址，则只有该地址或其后的地址才可见 -->
    <!-- <beans:property name="cookiePath" value="/"/> -->
  </beans:bean>

  <!--该拦截器通过名为 ”lang” 的参数来拦截 HTTP 请求，使其重新设置页面的区域化信息 -->
  <mvc:interceptors>
    <beans:bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
      <beans:property name="paramName" value="lang"/>
    </beans:bean>
  </mvc:interceptors>

</beans:beans>
